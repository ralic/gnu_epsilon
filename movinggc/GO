#!/bin/bash
## This file is part of GNU epsilon.

## Copyright (C) 2012 Universit√© Paris 13
## Copyright (C) 2015 Luca Saiu
## Written by Luca Saiu

## GNU epsilon is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.

## GNU epsilon is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.

## You should have received a copy of the GNU General Public License
## along with GNU epsilon.  If not, see <http://www.gnu.org/licenses/>.


set -ex

#OPTIMIZATIONFLAGS="-O3"
#OPTIMIZATIONFLAGS="$OPTIMIZATIONFLAGS -fomit-frame-pointer"
OPTIMIZATIONFLAGS="$OPTIMIZATIONFLAGS -Ofast"
#OPTIMIZATIONFLAGS="$OPTIMIZATIONFLAGS -finline-functions"

# # For reading assembly
#OPTIMIZATIONFLAGS="-O2 -Os -fno-inline-functions -fno-unroll-loops"

# FIXME: LTO doesn't play well with global regiter variables, or
# (more likely) I don't know how to use them together.  FIXME: ask.
# OPTIMIZATIONFLAGS="$OPTIMIZATIONFLAGS -flto"

DEBUGFLAGS="-fverbose-asm"
DEBUGFLAGS="$DEBUGFLAGS -Wall"
DEBUGFLAGS="$DEBUGFLAGS -g"

#DEBUGFLAGS="$DEBUGFLAGS -fno-inline" # This makes performance worse
#PROFILEFLAGS="-g -p -pg"

#OPTIMIZATIONFLAGS="$OPTIMIZATIONFLAGS -Os"
CFLAGS="$OPTIMIZATIONFLAGS $DEBUGFLAGS $PROFILEFLAGS"

CFLAGS="$CFLAGS -DMOVINGGC_ARCHITECTURE_"`uname --machine | sed s/-/_/g`" "

CFLAGS="$CFLAGS -save-temps"

echo COMPILING...
gcc $CFLAGS -c movinggc.c
gcc $CFLAGS -c driver.c
gcc $CFLAGS movinggc.o driver.o
echo FLUSHING...
sync
echo RUNNING...
time -p ./a.out
